name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetPlatform: [x86, x64]

    runs-on: windows-latest

    env:
      Solution_Name: HomeCalendar\HomeCalendar.sln
      Test_Project_Path: HomeCalendar\PresenterTest\PresenterTest.csproj
      Wap_Project_Directory: HomeCalendar\WAP
      Wap_Project_Path: HomeCalendar\WAP\WAP.wapproj
      Test_DLL: PresenterTest\bin\${{ matrix.targetPlatform }}\${{ matrix.configuration }}\net6.0-windows\PresenterTest.dll

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # - name: Setup vstest
    #   uses: darenm/Setup-VSTest@v1

    # - name: Execute unit tests
    #   run: vstest.console.exe $env:Test_DLL

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration /p:Platform=$env:TargetPlatform
      env:
        Configuration: ${{ matrix.configuration }}
        RuntimeIdentifier: win-${{ matrix.targetplatform }}
        TargetPlatform: ${{ matrix.targetplatform }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        AppxBundle: Never
        BuildMode: SideLoadOnly
        Configuration: ${{ matrix.Configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}

    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
